#!/bin/bash

# DromeBoard - Script de Configura√ß√£o MCP GitHub
echo "üîß Configurando MCP GitHub para DromeBoard..."

# Verificar se Node.js est√° instalado
if ! command -v node &> /dev/null; then
    echo "‚ùå Node.js n√£o est√° instalado. Instale Node.js primeiro."
    exit 1
fi

echo "‚úÖ Node.js encontrado: $(node --version)"

# Instalar o servidor MCP do GitHub
echo "üì¶ Instalando servidor MCP do GitHub..."
npm install -g @modelcontextprotocol/server-github

if [ $? -eq 0 ]; then
    echo "‚úÖ Servidor MCP do GitHub instalado com sucesso!"
else
    echo "‚ùå Erro ao instalar o servidor MCP do GitHub"
    exit 1
fi

# Verificar se o arquivo de configura√ß√£o existe
if [ -f ".mcp-config.json" ]; then
    echo "‚úÖ Arquivo de configura√ß√£o MCP encontrado"
else
    echo "‚ùå Arquivo .mcp-config.json n√£o encontrado"
    exit 1
fi

echo ""
echo "üéâ Configura√ß√£o MCP GitHub conclu√≠da!"
echo ""
echo "üìù Pr√≥ximos passos:"
echo "1. Obtenha um GitHub Personal Access Token em: https://github.com/settings/tokens"
echo "2. O token precisa das seguintes permiss√µes:"
echo "   - repo (acesso completo a reposit√≥rios)"
echo "   - workflow (para GitHub Actions)"
echo "   - read:org (para organiza√ß√µes)"
echo "3. Configure o token nas vari√°veis de ambiente do seu editor/IDE"
echo ""
echo "üîó Para usar o MCP:"
echo "   - O arquivo .mcp-config.json j√° est√° configurado"
echo "   - O servidor ser√° iniciado automaticamente quando necess√°rio"
echo ""
